/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: b746e77e-3d46-469c-843b-6c1fc9b50057
*/

namespace MeetingCalculatorTests
{
	using System;
	using System.Collections.Generic;
	using NUnit.Framework;

	public class RemoveMeetingTestCase
	{
		private static IEnumerable<TestCaseData> PositiveTests()
		{
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies")
					},
					ExpectedValue = true
				}
			).SetName(@"p1");
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 0, 0), new DateTime(2021, 5, 5, 12, 30, 0), "This is just an Event")
					},
					ExpectedValue = false
				}
			).SetName(@"p2");
		}

		private static IEnumerable<TestCaseData> TestsThrowingException()
		{
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(null),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies")
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n1 - this: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "This is just an Event")
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n2 - oldMeeting2delete: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 30, 0), new DateTime(2021, 5, 5, 12, 0, 0), "This is just an Event")
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n3 - oldMeeting2delete: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = null
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n4 - oldMeeting2delete: invalid");
		}

		private static IEnumerable<TestCaseData> TestsAssertingSideEffectsOnThis()
		{
			yield return new TestCaseData(
				new ExpectedValueTestData<MeetingCalculator.AppointmentChecker>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies")
					},
					ExpectedValue = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")})
				}
			).SetName(@"p1");
		}

		[Test]
		[TestCaseSource(nameof(PositiveTests))]
		public void RemoveMeetingTest(ExpectedValueTestData<Boolean> data)
		{
			var actual = data.ObjectUnderTest.RemoveMeeting(data.Params.oldMeeting2delete);
			Assert.AreEqual(data.ExpectedValue, actual);
		}

		[Test]
		[TestCaseSource(nameof(TestsThrowingException))]
		public void RemoveMeetingTestThrowingException(TestThrowingExceptionData data)
		{
			Assert.Throws(data.ExpectedException, () => data.ObjectUnderTest.RemoveMeeting(data.Params.oldMeeting2delete));
		}

		[Test]
		[TestCaseSource(nameof(TestsAssertingSideEffectsOnThis))]
		public void SideEffectOnThisTest(ExpectedValueTestData<MeetingCalculator.AppointmentChecker> data)
		{
			try
			{
				_ = data.ObjectUnderTest.RemoveMeeting(data.Params.oldMeeting2delete);
			}
			catch (Exception)
			{
			    // Ignored since we only check side effects
			}
			Assert.AreEqual(data.ExpectedValue, data.ObjectUnderTest);
		}

		public class ExpectedValueTestData<TExpected>
		{
			public MeetingCalculator.AppointmentChecker ObjectUnderTest;
			public Parameters Params;
			public TExpected ExpectedValue;
		}

		public class TestThrowingExceptionData
		{
			public MeetingCalculator.AppointmentChecker ObjectUnderTest;
			public Parameters Params;
			public Type ExpectedException;
		}

		public class Parameters
		{
			public MeetingCalculator.MeetingAppointment oldMeeting2delete;
		}
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1abW/aSBD+DBL/YcQnuwLCa2ibFF1K6F2kS4gCrXQ6nU6LPTTbLGtudw1FVf57d23zakhcyqW5niN
H2LuzM8+Md57ZtX30Ipd9AedduOr24bJ7fvHuD+j/dtGDdvfysnPVN72/IkdBFLowmIGLk5E+N+19lApGnovsNQya9W
NsNrFYc+vHxfrxK6f4sl4bFI+dytB5NWiUy42mHnOUy+aynIxQjomDcImoKP/YJszxGVGeMCplLvsll834UvdAbyYVj
k42rkttjzF0FPW4LAXwqLOUuXrPqSq9E9rM1BN3J8ZmZuwPGHXAYURKuMGRN8HIurHZJlK7lDF2M2NBJ9pDkIooPeKi
w/2R9n/A8HQuek4UacG1J6miEwxAW7YZGyjIzCgyFwQqX3DgOIXVcVYgkjHNnc9j7QS6HwjzAy2m//St5zEkvBXKhRo
zme7gk5Z9z10MggRvAsWxAJbOxmOPcjVCrtq36NyhsIzg71Sq07h01LIyqAVftiuOiwaKNWTs0xFa1XK1UoBGcLwsQF
kfdgF2ilTKC5n8W4Hkbki0V0RBnw6HKDhFmY/Gfx+WFUO7ZapLMD19/7mCa0Y41zYOBKKWAEQjBuIGJxSnB4LQSAChu
QWCEt6BEDQTIFhOnfwNDilHo3NuOG/f24UoIa6JTnAZ5UFwgQqFjHrnaZPxmBsNrmqi0iI7M+dHTPAI5f3cqTVG0EiV
8DHsug9+7FIP1ZV21folP67k7ZOUb1K+Sfnmp+eblQnzoExt7kv/lkrQxyffzHIOnYnW/zjfDAmTuwmnGhHOfbCiSr5
QChZI/VvhTbW/nc8Ojs3KbZ8Vk2mOKTIyhyMvn7Hncc//7RqziJ+pM7MxekNr0WTvmgO8AkVQenK9BsonhFH3W4vQE9
zCtP6k9SetPz+i/uxZfvajoqqmopi7KS+lvJTy0v+Jl2rPjphqKTGlxJQS03+YmPQm8LCUUE9CCXvtq8+kRGGU9qiLH
Z0ajpJdbnjucK8kkrBI+vwwpaOUjp7pOump3lc84xxP8+rnyqtHX4tF1fRPU37+WpyZmtfzfOGgZb5D0NV77TW+bQei
0dcCE4+68Y8FrIffo4Grr1ZK74QIII7yCdMJYvpKG7WxtGbBCkRCtijF2CDaO4RFv3QmsPOPVhyOWYNViGx+Wyy2P6l
PEpT44/2d+5bNAEXOBLJy3ZXFuAJYNrxpfX/89ojH7hXWlsAsZUKRByZMolXVZrCUmAW/UcH4+3BzKkwlhyjnFjaXtK
E10H9HR3DxkXsCXZCUOwhTBI+zGTgGsG5zETCM0YrWJPN1mxvr6+LVT3i2h7Q/b24tIxYNSxJt2DB/sqpgWbPDU7nWu
7C8jmwn/gd39U8KXO9hIJZvO3Gvr1weARqvCvFN0NyS+dfHV6LzvGuRJgAA
END_CODEGEN_DATA
*/
