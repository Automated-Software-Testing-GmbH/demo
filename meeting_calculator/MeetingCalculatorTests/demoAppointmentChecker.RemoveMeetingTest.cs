/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: b746e77e-3d46-469c-843b-6c1fc9b50057
*/

	using System;
	using System.Collections.Generic;
	using NUnit.Framework;

namespace MeetingCalculatorTests
{
	public class RemoveMeetingTestCase
	{
#region Test methods
		[Test]
		[TestCaseSource(nameof(ExpectedReturnValueTests))]
		public void RemoveMeetingTest(ExpectedValueTestData<bool> data)
		{
			var actual = data.ObjectUnderTest.RemoveMeeting(data.Params.oldMeeting2delete);
			Assert.AreEqual(data.ExpectedValue, actual);
		}

		[Test]
		[TestCaseSource(nameof(TestsThrowingException))]
		public void RemoveMeetingTestThrowingException(TestThrowingExceptionData data)
		{
			Assert.Throws(data.ExpectedException, () => data.ObjectUnderTest.RemoveMeeting(data.Params.oldMeeting2delete));
		}

		[Test]
		[TestCaseSource(nameof(TestsAssertingSideEffectsOnThis))]
		public void SideEffectOnThisTest(ExpectedValueTestData<MeetingCalculator.AppointmentChecker> data)
		{
			try
			{
				_ = data.ObjectUnderTest.RemoveMeeting(data.Params.oldMeeting2delete);
			}
			catch (Exception)
			{
				// Ignored since we only check side effects
			}

			Assert.AreEqual(data.ExpectedValue, data.ObjectUnderTest);
		}
#endregion

#region Data
		private static IEnumerable<TestCaseData> ExpectedReturnValueTests()
		{
			yield return new TestCaseData(
				new ExpectedValueTestData<bool>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"),
					},
					ExpectedValue = true,
				}).SetName(@"p1");
			yield return new TestCaseData(
				new ExpectedValueTestData<bool>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 0, 0), new DateTime(2021, 5, 5, 12, 30, 0), "This is just an Event"),
					},
					ExpectedValue = false,
				}).SetName(@"p2");
				}

		private static IEnumerable<TestCaseData> TestsThrowingException()
		{
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(null),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"),
					},
					ExpectedException = typeof(Exception),
				}).SetName(@"n1 - this: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "This is just an Event"),
					},
					ExpectedException = typeof(Exception),
				}).SetName(@"n2 - oldMeeting2delete: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 30, 0), new DateTime(2021, 5, 5, 12, 0, 0), "This is just an Event"),
					},
					ExpectedException = typeof(Exception),
				}).SetName(@"n3 - oldMeeting2delete: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = null,
					},
					ExpectedException = typeof(Exception),
				}).SetName(@"n4 - oldMeeting2delete: invalid");
				}

		private static IEnumerable<TestCaseData> TestsAssertingSideEffectsOnThis()
		{
			yield return new TestCaseData(
				new ExpectedValueTestData<MeetingCalculator.AppointmentChecker>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						oldMeeting2delete = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"),
					},
					ExpectedValue = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> { new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting") }),
				}).SetName(@"p1");
				}
#endregion

#region Types
		public struct ExpectedValueTestData<TExpected>
		{
			public MeetingCalculator.AppointmentChecker ObjectUnderTest;
			public Parameters Params;
			public TExpected ExpectedValue;
		}

		public struct TestThrowingExceptionData
		{
			public MeetingCalculator.AppointmentChecker ObjectUnderTest;
			public Parameters Params;
			public Type ExpectedException;
		}

		public struct Parameters
		{
			public MeetingCalculator.MeetingAppointment oldMeeting2delete;
		}
#endregion
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1aW2/aSBR+Bon/cERfTAWEcAlt06LNErqN1IQquCutVqvVYB+CGzNmZ8ZQVPHf94xtLo4h66Zsmu1
ashJ7fO6X78zIHD0v5J/DeR+u+iZc9s8v3v4G5ruLAXT7l5e9K1O//QU5CqbQhuECbJxN6F6vmygVTDwb3VcwbDdPsN
3GSsNunlSaJy+tyotmY1g5sY5H1sthq1ZrtYnnqJAv5H3p8BsYLKTCyWn8sdr1XBct5XhcVgO9jrUmufrIHVV9K9gE5
564PdWyOD3IKbMQLhEVUXWZa/kuU57Q5slC/kshn5v6Q9exwHKZlHCNE2+GEbkm6jJJ/uSI8JnAG1IdeYZq7NkkIZf7
XS/8sb7TDAPPFxYaWr83Mnqfp2Q12teofMF/Za6PgfpSKeCK9M88x06qXzOv2c6ZYq+Hnud2wKbbkhah3cjlZkwAs5T
PXHgTvKv2h5+I+SO3MXC4GhNvBCQfGIVMVj3XjpbrlDJUWDoNZJ5JiUJVzwT2/iLBIU/MpnKkM2RY6riniEkQAHMsvD
mp7H22cKrTmiYiCSZj56oO090ARc4EtDLuypqvDEYJ3nS+PX4PiEdoH8kYODb2RiPSLfvcHDu7SmVDE5LcUy2J6q+eT
aeew9UEueqO0bpFkagmJRbB//Ap9+fhamoZ/LWYssZgbHK/re3oCC5uuCcIVqi7qYHnCB53F2Bpa2nNRsAwQCuRqct1
lxfrZD1Dbod9riWuWl5HMYi/cGaEbyAVU5SHix73J4R+Qxdfr9KqSTuwr+WNrQAvHHRtEAEFcJzDtggjjINevgcBQqI
oZrk7PlHCNHua5Bua8L0j1Y5SiVa2mDrwZY/kJG0gmQxG05mgUa/Vj8vQCq4XZajRVSrDXpLj2pqm+LNAdjti5BZTYD
qUe8EdlMWI/9ts2VK0n6a+MWZAhcAVfHAZ56TjQEY0UhjRShhxjTMH5wcyoZXChPYOE5TwDmRBO4UFm9IpXuPI4ahlr
hQXS7AslaOWCJEo6oTggWBIyOjtqnFyCaTa2zvfpcIjM5ermxgikKlKEK6F75al6gDVFflp/FScHhcjyM2wJsOaDGt+
YKzZqph7aRorZ/SWEej65Osy59CbkfwUWDNirtwNNvVibMubeq+0+yjwkJ3S3oPA4bDLd92nkfB/fbisA6gHzGIaHmR
Xe/VdBcCPoQKKyuoVOHzGXMf+2unzCPnLZk82e7LZ831mz0NHz9cjUZ2QKOFrBksZLGWw9P+CpcbTwqVGhksZLmW49J
/GJToBHhARmmkQ4UEn6v0fkw73ESLVh6UMjTI0ytDoqe6SHu0jxVNu86y1fszW2v01bO9nfpNGttz6nYVUwrfUntlnr
pY7m2ka8aUpc7gzCE+3BWxAILyVsbdrzXHLYluFmAP3HhQe1XIKMCQ2S/sNj4PhP1iaLLPkzmpX/vUzXX8Diz5mTe0m
AAA=
END_CODEGEN_DATA
*/
