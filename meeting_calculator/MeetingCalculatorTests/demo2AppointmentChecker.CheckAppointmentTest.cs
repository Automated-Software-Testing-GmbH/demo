/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: e33efe0e-2e0d-48cd-ad70-419b9cb426e3
*/

namespace MeetingCalculatorTests
{
	using System;
	using System.Collections.Generic;
	using NUnit.Framework;

	public class CheckAppointmentTestCase
	{
		private static IEnumerable<TestCaseData> PositiveTests()
		{
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 30, 0), new DateTime(2021, 5, 5, 13, 0, 0))
					},
					ExpectedValue = true
				}
			).SetName(@"p1");
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 0, 0), new DateTime(2021, 5, 5, 13, 0, 0), "Lunch with Bob")
					},
					ExpectedValue = true
				}
			).SetName(@"p2");
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 13, 30, 0))
					},
					ExpectedValue = false
				}
			).SetName(@"p3");
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 9, 0, 0))
					},
					ExpectedValue = false
				}
			).SetName(@"p4");
			yield return new TestCaseData(
				new ExpectedValueTestData<Boolean>
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 5, 0, 0), new DateTime(2021, 5, 5, 20, 0, 0))
					},
					ExpectedValue = false
				}
			).SetName(@"p5");
		}

		private static IEnumerable<TestCaseData> TestsThrowingException()
		{
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 8, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 30, 0), new DateTime(2021, 5, 5, 13, 0, 0))
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n1 - this: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 8, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 0, 0), new DateTime(2021, 5, 5, 13, 0, 0), "Lunch with Bob")
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n2 - this: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(null),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 12, 30, 0), new DateTime(2021, 5, 5, 13, 0, 0))
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n3 - this: invalid");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 13, 0, 0))
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n4 - Meeting2check: invalidAppointmentTime");
			yield return new TestCaseData(
				new TestThrowingExceptionData
				{
					ObjectUnderTest = new MeetingCalculator.AppointmentChecker(new List<MeetingCalculator.MeetingAppointment> {new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 8, 0, 0), new DateTime(2021, 5, 5, 10, 0, 0), "Breakfast at Tiffernies"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 10, 0, 0), new DateTime(2021, 5, 5, 12, 0, 0), "Sprint Planning"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 0, 0), new DateTime(2021, 5, 5, 15, 0, 0), "Sprint Review"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 15, 0, 0), new DateTime(2021, 5, 5, 17, 0, 0), "Sprint Retro"), new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 17, 0, 0), new DateTime(2021, 5, 5, 18, 0, 0), "Refinement Meeting")}),
					Params = new Parameters
					{
						Meeting2check = new MeetingCalculator.MeetingAppointment(new DateTime(2021, 5, 5, 13, 30, 0), new DateTime(2021, 5, 5, 13, 0, 0))
					},
					ExpectedException = typeof(Exception)
				}
			).SetName(@"n5 - Meeting2check: invalidAppointmentEndStart");
		}

		[Test]
		[TestCaseSource(nameof(PositiveTests))]
		public void CheckAppointmentTest(ExpectedValueTestData<Boolean> data)
		{
			var actual = data.ObjectUnderTest.CheckAppointment(data.Params.Meeting2check);
			Assert.AreEqual(data.ExpectedValue, actual);
		}

		[Test]
		[TestCaseSource(nameof(TestsThrowingException))]
		public void CheckAppointmentTestThrowingException(TestThrowingExceptionData data)
		{
			Assert.Throws(data.ExpectedException, () => data.ObjectUnderTest.CheckAppointment(data.Params.Meeting2check));
		}

		public class ExpectedValueTestData<TExpected>
		{
			public MeetingCalculator.AppointmentChecker ObjectUnderTest;
			public Parameters Params;
			public TExpected ExpectedValue;
		}

		public class TestThrowingExceptionData
		{
			public MeetingCalculator.AppointmentChecker ObjectUnderTest;
			public Parameters Params;
			public Type ExpectedException;
		}

		public class Parameters
		{
			public MeetingCalculator.MeetingAppointment Meeting2check;
		}
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO2abW/aOhTHX4PEdzjiVTIB43Ft1w7dlrJ7K62lGuxKV1f3hUkOF98GJ7MdWDX1u88O4SE8tOnK7ga
yFERiH/v8jx3/Eg5+/SqXfQWXHbjp9OC6c3n1/i/o/XHVhVbn+rp909O1vyNDTiS60L8HF8cjda7LeygkjHwXvbeAtR
oOsIzFKpbdYv3YcYvEPSoX65WT/onTr1ffYE21eZ3L5rKMjFAExEG4RpSU/dsinhN6RPpcdyly2a+5bCYUqga690Li6
HTlutTyPQ8dSX0mSpE86ixsbj4xKkvvuXIz8fndqfaZCcK+Rx1wPCIEtIbo3J0HgU+ZHCGT2m2LCBVVRrvOBJyOVZAg
JJGq0VWbhSM1BH0Pz2aml0SSJtz6gko6xki3Zeu2UQeZe4qeCxxlyBkwnMByOysyyeji9pdAxYHun8QLo150/dmF73t
IWHNqN+0xk+n0/1O2n5iL0TjBu6jjtTEsLQUWBYrc0oYfqJBn69ZxyVKjJnzd3PG6adSxkow9OkKrWq5WCtCIjuMClN
VhF2CrSaU8t8lfcCR3A6KiIhJ6dDBAziiKfNz+ZVqWHG23qS7EdNX8Mwm3HmFM+diRiFoKEY01ER9xTHGyIwmNFBKON
kiQ3N+RgqMUCha3Tv4jDihD3efMcd5+sAvxgrglao2LeB1EFyiRi7h2tmwyccuqoxfD1lXzrDDUzVJ7Mo7ZhNuxkIeZ
7sSiV4IkD3Fa9RB92aUuyhsVjfVbPqjk7VODFIMUg5SDR0pqoqgwPoTMGcKEyiFc+P38yxhTNYwxjDGMOXjGpJnL2uz
V5kmkDIgntjOlZphimGKYcuhMSXFzn6T9HfQ4UOoGKAYoBiiHDpQU41gt74YojZgoD1GGOH3WN8r29obcn6ig2l8cDH
Qm+nvSv7p4rSNtc9h0OjZwMnDaRzjtKPE7X+o6MXMfoD+w5kX2NlyxChRBDql4C5SNiUfd574QHSJt0ixxgxuDm73Fz
Y9ICn8ff6p7wJ/Q836NaftpT4naHszSr/hOan4xm6fEnj4lUqb1fwRt6oo2iYjm2FneXqXUGAoZChkKHTiFftpLTyMN
htrM7UrCZTLr97fmxj/zM42irh9yBy29T1W5T+zxtO3INN5NOvapu3EzqfX4fw/gqquldOGYcCCODImnotZ1pRWulVa
dWJHVdLJLichjzp4LgVyWzjm2P6t+p/YJVYXY5fNGY3PuM+WwrOdMt2J+dYjieCJbkYxm3q4Alg3vmi8ewWRWeHnj8O
Zp7c2Kmwu9cbM0TyJYkXq63MFiCU9PRaJ27jmpbKv+R5+q/6twtbRhbQK36k6C7Amh69RKsmHmRX/U8Q3uvriFAy8AA
A==
END_CODEGEN_DATA
*/
